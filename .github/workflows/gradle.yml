name: Java CI/CD with Gradle

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make application.yml
        run: |
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.APPLICATION_YML }}" > ./application.yml

  CD:
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      # - name: Copy JAR to Docker Context
      #   run: cp ./build/libs/*.jar $GITHUB_WORKSPACE

      - name: Build JAR
        run: ./gradlew clean build -x test

      - name: Docker image build
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/crud-docker --pull --no-cache .

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Hub push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/crud-docker

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            sudo docker stop crud-docker
            sudo docker rm crud-docker
            sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/crud-docker
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/crud-docker
            sudo docker run -d --name crud-docker -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/crud-docker
